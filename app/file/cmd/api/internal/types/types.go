// Code generated by goctl. DO NOT EDIT.
package types

type FileChunkSuccessRequest struct {
	Parts    []*PartObject `json:"parts"`
	Key      string        `json:"key"`
	UploadId string        `json:"upload_id"`
}

type FileChunkSuccessResponse struct {
}

type PartObject struct {
	PartNumber int    `json:"part_number"`
	ETag       string `json:"e_tag"`
}

type FileChunkUploadRequest struct {
}

type FileChunkUploadResponse struct {
	ETag string `json:"e_tag"`
}

type FileUploadPrepareRequest struct {
	Md5  string `json:"md5"`
	Name string `json:"name"`
	Ext  string `json:"ext"`
}

type FileUploadPrepareResponse struct {
	Identity string `json:"identity"`
	UploadId string `json:"uploadId"`
	Key      string `json:"key"`
}

type ShareBasicListRequest struct {
	Page int `json:"page,optional"`
	Size int `json:"size,optional"`
}

type ShareBasicListResponse struct {
	ShareBasic []*ShareFile `json:"list"`
	Count      int          `json:"count"`
}

type ShareFile struct {
	Name     string `json:"name"`
	Ext      string `json:"ext"`
	Path     string `json:"path"`
	Size     int    `json:"size"`
	ClickNum int    `json:"click_num"`
}

type ShareBasicDetailRequest struct {
	Identity string `json:"identity"`
}

type ShareBasicDetailResponse struct {
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int    `json:"size"`
	Path               string `json:"path"`
	RepositoryIdentity string `json:"respository_identity"`
}

type ShareBasicCreateRequest struct {
	RepositoryIdentity string `json:"repository_identity"`
	ExpiredTime        int    `json:"expired_time"`
}

type ShareBasicCreateResponse struct {
	Identity string `json:"identity"`
}

type UserFileMoveRequest struct {
	Identity string `json:"identity"`
	ParentId int    `json:"parent_id"`
}

type UserFileMoveResponse struct {
}

type UserFileDelRequest struct {
	Identity string `json:"identity"`
}

type UserFileDelResponse struct {
}

type UserFolderCreateRequest struct {
	ParentId int    `json:"parent_id"`
	Name     string `json:"name"`
}

type UserFolderCreateResponse struct {
	Identity string `json:"identity"`
}

type EditFileNameRequest struct {
	Identity string `json:"identity"` // 文件的唯一标识
	Name     string `json:"name"`     // 文件新名称
}

type EditFileNameResponse struct {
}

type UserFileListRequest struct {
	Id   int `json:"id,optional"` // 文件夹id
	Page int `json:"page,optional"`
	Size int `json:"size,optional"`
}

type UserFileListResponse struct {
	List  []*UserFile `json:"list"`
	Count int         `json:"count"`
}

type UserFile struct {
	Id                 int    `json:"id"`
	Name               string `json:"name"`
	Ext                string `json:"ext"`
	Size               int    `json:"size"`
	Path               string `json:"path"`
	Identity           string `json:"identity"`
	RepositoryIdentity string `json:"repository_identity"`
}

type UserRepositoryRequest struct {
	ParentId           int    `json:"parent_id"`
	RepositoryIdentity string `json:"repository_identity"`
}

type UserRepositoryResponse struct {
	Identity string `json:"identity"`
}

type FileUploadRequest struct {
	Hash string `json:"hash,optional"`
	Name string `json:"name,optional"`
	Ext  string `json:"ext,optional"`
	Size int64  `json:"size,optional"`
	Path string `json:"path,optional"`
}

type FileUploadResponse struct {
	Identity string `json:"identity"`
	Name     string `json:"name,optional"`
	Ext      string `json:"ext,optional"`
	Size     int64  `json:"size,optional"`
	Path     string `json:"path,optional"`
}
